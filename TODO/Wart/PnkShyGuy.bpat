%Pink Shy Guy Animations
#define .Anim:pnkShyGuyStatic     003B0300
#define .Anim:pnkShyGuyIdle      003B0301
#define .Anim:pnkShyGuyWalk      003B0302
#define .Anim:pnkShyGuyRun    003B0303
#define .Anim:pnkShyGuyTackleRun       003B0304
#define .Anim:pnkShyGuyTackle     003B0305
%#define .Anim:pnkShyGuyBowStatic     003B0306
#define .Anim:pnkShyGuyBow    003B0007
#define .Anim:pnkShyGuyRaise      003B0009
#define .Anim:pnkShyGuyJump      003B000A
#define .Anim:pnkShyGuyHurt  003B000C
#define .Anim:pnkShyGuyDead  003B000C
#define .Anim:pnkShyGuyBurnt 003B000D
#define .Anim:pnkShyGuyExplosion 003B000E
#define .Anim:pnkShyGuyDefeated     003B0010
#define .Anim:pnkShyGuyTalk     003B0011
#define .Anim:pnkShyGuySleep     003B0012
#define .Anim:pnkShyGuyFail     003B0013
#define .Anim:pnkShyGuyScared 003B0014
%#define .Anim:pnkShyGuyCry 003B0015

%Pink Shy Guy parts
#define .Part:pnkShyGuy 1

%Pink Shy Guy stats
#define .HP:pnkShyGuy 2`b
#define .Damage:pnkTackle 1`
#define .Damage:pnkJump 1`

#new:Actor $PNK_ShyGuy 
{
    % stats
    [Index]        1Fb
    [Level]        5`b
    [MaxHP]         .HP:pnkShyGuy
    [Coins]         1`b
    [Flags]       00000000
    [StatusTable] $StatusTable_PNK_ShyGuy
    % ai
    [PartsCount]    1`s
    [PartsTable]  $PartsTable_PNK_ShyGuy
    [Script]      $Script_Init_PNK_ShyGuy
    % move effectiveness
    [Escape]       95`b
    [Item]         100`b
    [AirLift]      100`b
    [Hurricane]    100`b % Bow's "Spook" as well
    [UpAndAway]    100`b
    [PowerBounce] 100`b
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         28`b  24`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  20`b % dx dy
    [StatusIcon]   10`b  20`b % dx dy
}

#new:DefenseTable $DefenseTable_PNK_ShyGuy 
{
    .Element:Normal 0`
    .Element:End
}

#new:StatusTable $StatusTable_PNK_ShyGuy 
{
    .Status:Normal      0`
    .Status:Default     0`
    .Status:Sleep      100`
    .Status:Poison     100`
    .Status:Frozen      0`
    .Status:Dizzy      100`
    .Status:Fear      100`
    .Status:Static     100`
    .Status:Paralyze   100`
    .Status:Shrink     100`
    .Status:Stop       100`
    .Status:DefaultTurnMod    0`
    .Status:SleepTurnMod      0`
    .Status:PoisonTurnMod     0`
    .Status:FrozenTurnMod     0`
    .Status:DizzyTurnMod      0`
    .Status:FearTurnMod       0`
    .Status:StaticTurnMod     0`
    .Status:ParalyzeTurnMod   0`
    .Status:ShrinkTurnMod     0`
    .Status:StopTurnMod       0`
    .Status:End
}

#new:PartsTable $PartsTable_PNK_ShyGuy { %ActorPartBlueprint struct in decomp
    /% s32 flags %/                 00800000
    /% s8 index %/                  ~Byte:.Part:pnkShyGuy
    /% Vec3b posOffset %/           00b 00b 00b
    /% Vec2b targetOffset %/        00b 18b %for cursor when selecting to attack in battle
    /% s16 opacity %/               00FFs
    /% s32* IdleAnimations %/       $IdleAnimations_PNK_ShyGuy
    /% s32* defenseTable %/         $DefenseTable_PNK_ShyGuy
    /% s32 eventFlags %/            00000000
    /% s32 elementImmunityFlags %/  00000000
    /% s8 unk_1C %/                 FFb
    /% s8 unk_1D %/                 F6b
    /% s8 unk_1E %/                 00b
    /% s8 unk_1F %/                 00b
    /% s8 unk_20 %/                 00000000
    
    /%hammer
    % s32 flags %                 00120001
    % s8 index %                  ~Byte:.hammerPart
    % Vec3b posOffset %           00b 00b 00b
    % Vec2b targetOffset %        00b 00b %for cursor when selecting to attack in battle
    % s16 opacity %               00FFs
    % s32* IdleAnimations %       $IdleAnimations_Hammer
    % s32* defenseTable %         $DefenseTable_MemoryLuigi
    % s32 eventFlags %            00000000
    % s32 elementImmunityFlags %  00000000
    % s8 unk_1C %                 00b
    % s8 unk_1D %                 00b
    % s8 unk_1E %                 00b
    % s8 unk_1F %                 00b
    % s8 unk_20 %                 00000000
    %/
}

#new:IdleAnimations $IdleAnimations_PNK_ShyGuy 
{
    .Status:Normal    .Anim:pnkShyGuyIdle
    .Status:Stone     .Anim:pnkShyGuyStatic
    .Status:Sleep     .Anim:pnkShyGuySleep
    .Status:Poison    .Anim:pnkShyGuyIdle
    .Status:Stop      .Anim:pnkShyGuyStatic
    .Status:Static    .Anim:pnkShyGuyIdle
    .Status:Paralyze  .Anim:pnkShyGuyStatic
    .Status:Dizzy     .Anim:pnkShyGuyFail
    .Status:Fear      .Anim:pnkShyGuyFail
    .Status:End
}

#new:Script $Script_Init_PNK_ShyGuy 
{
    Call  BindTakeTurn      ( .Actor:Self $Script_TakeTurn_PNK_ShyGuy )
    Call  BindIdle  ( .Actor:Self $Script_Idle_PNK_ShyGuy )
    Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_PNK_ShyGuy )
    Return
    End
}

#new:Function $Function_80218270 
{
    ADDIU     SP, SP, FFD8
    SW        S1, 14 (SP)
    COPY      S1, A0
    SW        RA, 20 (SP)
    SW        S3, 1C (SP)
    SW        S2, 18 (SP)
    SW        S0, 10 (SP)
    LW        S0, C (S1)
    LW        A1, 0 (S0)
    JAL       ~Func:get_variable
    ADDIU     S0, S0, 4
    LW        A1, 0 (S0)
    ADDIU     S0, S0, 4
    COPY      A0, S1
    JAL       ~Func:get_variable
    COPY      S3, V0
    LW        A1, 0 (S0)
    ADDIU     S0, S0, 4
    COPY      A0, S1
    JAL       ~Func:get_variable
    COPY      S2, V0
    COPY      A0, S1
    LW        A1, 0 (S0)
    JAL       ~Func:get_variable
    COPY      S0, V0
    LW        A0, 148 (S1)
    JAL       ~Func:get_actor
    COPY      S1, V0
    COPY      V1, V0
    LW        V0, 8 (V1)
    LBU       V0, 24 (V0)
    LW        A0, 8 (V1)
    SUBU      S3, S3, V0
    SB        S3, 194 (V1)
    LBU       V0, 25 (A0)
    SUBU      S2, S2, V0
    SB        S2, 195 (V1)
    LBU       V0, 26 (A0)
    SUBU      S0, S0, V0
    SB        S0, 196 (V1)
    LBU       A0, 27 (A0)
    SUBU      S1, S1, A0
    SB        S1, 197 (V1)
    LW        RA, 20 (SP)
    LW        S3, 1C (SP)
    LW        S2, 18 (SP)
    LW        S1, 14 (SP)
    LW        S0, 10 (SP)
    LI        V0, 2
    JR        RA
    ADDIU     SP, SP, 28
}

#new:Script $Script_Idle_PNK_ShyGuy 
{
    Label  0
    Call  GetStatusFlags    ( .Actor:Self *Var0 )
    If  *Var0  &  ~Flags:StatusFlags:Sleep % 1000
        Call  SetTargetOffset       ( .Actor:Self .Part:pnkShyGuy  -4`  14` )
        Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
        Call  $Function_80218270    ( FFFFFFF6 0000000D 0000000A 0000000D )
    Else
        Call  SetTargetOffset       ( .Actor:Self .Part:pnkShyGuy  0`  24` )
        Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
        Call  $Function_80218270    ( FFFFFFF6 00000014 0000000A 00000014 )
    EndIf
    Wait  1`
    Goto  0
    Return
    End
}

#new:Script $Script_ReturnHome_PNK_ShyGuy
{
    Call  ResetAllActorSounds   ( .Actor:Self )
    SetConst  *Var0  .Part:pnkShyGuy
    SetConst  *Var1  .Anim:pnkShyGuyRun
    ExecWait  DoReturnHome
    Call  SetAnimation  ( .Actor:Self .Part:pnkShyGuy .Anim:pnkShyGuyIdle )
    Return
    End
}

#new:Script $Script_HandleEvent_PNK_ShyGuy
{
    Call EnableIdleScript ( .Actor:Self .False )
    Call UseIdleAnimation ( .Actor:Self .False )
    Call  GetLastEvent      ( .Actor:Self *Var0 )
    Switch  *Var0
        CaseOR  ==  .Event:HitCombo % 9
        CaseOR  ==  .Event:Hit % A
            SetConst  *Var0  .Part:pnkShyGuy
            SetConst  *Var1  .Anim:pnkShyGuyHurt
            ExecWait  DoNormalHit
        EndCaseGroup
        Case  ==  .Event:BurnHit % E
            SetConst  *Var0  .Part:pnkShyGuy
            SetConst  *Var1  .Anim:pnkShyGuyBurnt
            SetConst  *Var2  .Anim:pnkShyGuyExplosion
            ExecWait  DoBurnHit
        Case  ==  .Event:BurnDeath % 24
            SetConst  *Var0  .Part:pnkShyGuy
            SetConst  *Var1  .Anim:pnkShyGuyBurnt
            SetConst  *Var2  .Anim:pnkShyGuyExplosion
            ExecWait  DoBurnHit
            SetConst  *Var0  .Part:pnkShyGuy
            SetConst  *Var1  .Anim:pnkShyGuyExplosion
            ExecWait  DoDeath
            Return
        Case  ==  .Event:SpinSmashHit % B
            SetConst  *Var0  .Part:pnkShyGuy
            SetConst  *Var1  .Anim:pnkShyGuyHurt
            ExecWait  DoSpinSmashHit
        Case  ==  .Event:SpinSmashDeath % 21
            SetConst  *Var0  .Part:pnkShyGuy
            SetConst  *Var1  .Anim:pnkShyGuyHurt
            ExecWait  DoSpinSmashHit
            SetConst  *Var0  .Part:pnkShyGuy
            SetConst  *Var1  .Anim:pnkShyGuyDead
            ExecWait  DoDeath
            Return
        Case  ==  .Event:ShockHit % 2F
            SetConst  *Var0  .Part:pnkShyGuy
            SetConst  *Var1  .Anim:pnkShyGuyHurt
            ExecWait  DoShockHit
            SetConst  *Var0  .Part:pnkShyGuy
            SetConst  *Var1  .Anim:pnkShyGuyHurt
            ExecWait  DoJumpBack
            Call  SetActorSpeed ( .Actor:Self *Fixed[2.0] )
            ExecWait  $Script_ReturnHome_PNK_ShyGuy
        Case  ==  .Event:ShockDeath % 26
            SetConst  *Var0  .Part:pnkShyGuy
            SetConst  *Var1  .Anim:pnkShyGuyHurt
            ExecWait  DoShockHit
            SetConst  *Var0  .Part:pnkShyGuy
            SetConst  *Var1  .Anim:pnkShyGuyDead
            ExecWait  DoDeath
            Return
        CaseOR  ==  00000017 % 17
        CaseOR  ==  .Event:Immune % 19
        CaseOR  ==  .Event:AirLiftFailed % 1F
            SetConst  *Var0  .Part:pnkShyGuy
            SetConst  *Var1  .Anim:pnkShyGuyIdle
            ExecWait  DoImmune
        EndCaseGroup
        Case  ==  .Event:Death % 20
            SetConst  *Var0  .Part:pnkShyGuy
            SetConst  *Var1  .Anim:pnkShyGuyHurt
            ExecWait  DoNormalHit
            Wait  10`
            SetConst  *Var0  .Part:pnkShyGuy
            SetConst  *Var1  .Anim:pnkShyGuyDead
            ExecWait  DoDeath
            Return
        Case  ==  .Event:RecoverStatus % 31
            SetConst  *Var0  .Part:pnkShyGuy
            SetConst  *Var1  .Anim:pnkShyGuyIdle
            ExecWait  DoRecover
        Case  ==  .Event:ScareAway % 39
            SetConst  *Var0  .Part:pnkShyGuy
            SetConst  *Var1  .Anim:pnkShyGuyRun
            SetConst  *Var2  .Anim:pnkShyGuyScared
            ExecWait  DoScareAway
            Return
        Case  ==  .Event:BeginAirLift % 3A
            SetConst  *Var0  .Part:pnkShyGuy
            SetConst  *Var1  .Anim:pnkShyGuyHurt
            ExecWait  DoAirLift
        Case  ==  .Event:BlowAway % 16
            SetConst  *Var0  .Part:pnkShyGuy
            SetConst  *Var1  .Anim:pnkShyGuyHurt
            ExecWait  DoBlowAway
            Return
        Default
    EndSwitch
    Call EnableIdleScript ( .Actor:Self .True )
    Call UseIdleAnimation ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_TakeTurn_PNK_ShyGuy 
{
    Call EnableIdleScript ( .Actor:Self .False )
    Call UseIdleAnimation ( .Actor:Self .False )
    Call  RandInt   ( 00000001 *Var0 )
    If  *Var0  ==  00000000
        ExecWait  $Script_Tackle_PNK_ShyGuy
    Else
        ExecWait  $Script_Jump_PNK_ShyGuy
    EndIf
    Call EnableIdleScript ( .Actor:Self .True )
    Call UseIdleAnimation ( .Actor:Self .True )
    Return
    End
}


#new:Script $Script_Tackle_PNK_ShyGuy
{
    Call EnableIdleScript ( .Actor:Self .False )
    Call UseIdleAnimation ( .Actor:Self .False )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseBattleCamPreset    ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver (  20` )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  SetAnimation      ( .Actor:Self .Part:pnkShyGuy .Anim:pnkShyGuyRun )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[2.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Add   *Var0  00000032
    Set   *Var1  00000000
    Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Call  RunToGoal ( .Actor:Self  0` .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var0
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *VarA  *Var0
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Jump 000002EF 00000000 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
            Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
            Call  SetActorSpeed ( .Actor:Self *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self .Part:pnkShyGuy .Anim:pnkShyGuyTackleRun )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  RunToGoal     ( .Actor:Self  0` .False )
            Call  SetAnimation  ( .Actor:Self .Part:pnkShyGuy .Anim:pnkShyGuyTackle )
            Call  SetActorSpeed ( .Actor:Self *Fixed[2.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
            Sub   *Var0  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
            Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
            If  *VarA  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *VarA ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  ResetAllActorSounds   ( .Actor:Self )
            Sub   *Var0  00000014
            Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
            Call  JumpToGoal        ( .Actor:Self  8` .False .True .False )
            Wait  15`
            Call  UseBattleCamPreset    ( 00000002 )
            Call  SetActorYaw       ( .Actor:Self  180` )
            Call  AddActorDecoration    ( .Actor:Self .Part:pnkShyGuy 00000000 .Decoration:Sweat )
            Call  SetActorSpeed     ( .Actor:Self *Fixed[2.0] )
            SetConst  *Var0  .Part:pnkShyGuy
            SetConst  *Var1  .Anim:pnkShyGuyTackleRun
            ExecWait  DoReturnHome
            Call  RemoveActorDecoration ( .Actor:Self .Part:pnkShyGuy 00000000 )
            Call  SetActorYaw       ( .Actor:Self  0` )
            Call  SetAnimation      ( .Actor:Self .Part:pnkShyGuy .Anim:pnkShyGuyIdle )
            Call EnableIdleScript ( .Actor:Self .True )
            Call UseIdleAnimation ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Thread
        Wait  3`
        Call  PlaySoundAtActor  ( .Actor:Self 000002EF )
    EndThread
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[2.0] )
    Call  SetAnimation      ( .Actor:Self .Part:pnkShyGuy .Anim:pnkShyGuyTackleRun )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Add   *Var0  0000000A
    Set   *Var1  00000000
    Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Call  RunToGoal ( .Actor:Self  0` .False )
    Call  SetAnimation      ( .Actor:Self .Part:pnkShyGuy .Anim:pnkShyGuyTackle )
    Wait  2`
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 .Damage:pnkTackle 00000020 )
    Call  ResetAllActorSounds   ( .Actor:Self )
    Call  UseBattleCamPreset    ( 00000002 )
    Call  MoveBattleCamOver (  15` )
    Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Add   *Var0  0000001E
    Set   *Var1  00000000
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
    Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Call  JumpToGoal        ( .Actor:Self  10` .False .True .False )
    Call  SetAnimation      ( .Actor:Self .Part:pnkShyGuy .Anim:pnkShyGuyIdle )
    Wait  8`
    Call  SetActorSpeed     ( .Actor:Self *Fixed[2.0] )
    ExecWait  $Script_ReturnHome_PNK_ShyGuy
    Call EnableIdleScript ( .Actor:Self .True )
    Call UseIdleAnimation ( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_Jump_PNK_ShyGuy
{
    Call EnableIdleScript ( .Actor:Self .False )
    Call UseIdleAnimation ( .Actor:Self .False )
    Call  SetTargetActor    ( .Actor:Self .Actor:Player )
    Call  UseBattleCamPreset    ( 0000003F )
    Call  BattleCamTargetActor  ( .Actor:Self )
    Call  MoveBattleCamOver (  20` )
    Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
    Call  PlaySoundAtActor  ( .Actor:Self 00000234 )
    Call  SetAnimation      ( .Actor:Self .Part:pnkShyGuy .Anim:pnkShyGuyRaise )
    Wait  20`
    Call  SetAnimation      ( .Actor:Self .Part:pnkShyGuy .Anim:pnkShyGuyRun )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[2.0] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Add   *Var0  00000050
    Set   *Var1  00000000
    Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Call  RunToGoal ( .Actor:Self  0` .False )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 000020BA 000003B4 )
    Call  SetActorSounds    ( .Actor:Self .ActorSound:WalkIncrement 0000000A 00000000 )
    Call  SetAnimation      ( .Actor:Self .Part:pnkShyGuy .Anim:pnkShyGuyTackleRun )
    Call  SetActorSpeed     ( .Actor:Self *Fixed[2.0] )
    Sub   *Var0  00000028
    Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
    Call  RunToGoal ( .Actor:Self  0` .False )
    Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
    Switch  *Var0
        CaseOR  ==  .HitResult:Miss % 6
        CaseOR  ==  .HitResult:Lucky % 5
            Set   *VarA  *Var0
            Call  SetActorSpeed ( .Actor:Self *Fixed[2.0] )
            Call  SetAnimation  ( .Actor:Self .Part:pnkShyGuy .Anim:pnkShyGuyRaise )
            Thread
                Wait  12`
                Call  SetAnimation  ( .Actor:Self .Part:pnkShyGuy .Anim:pnkShyGuyJump )
            EndThread
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalToTarget   ( .Actor:Self )
            Call  GetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
            Sub   *Var0  0000000A
            Set   *Var1  00000000
            Call  SetGoalPos        ( .Actor:Self *Var0 *Var1 *Var2 )
            Call  JumpToGoal        ( .Actor:Self  24` .False .True .False )
            If  *VarA  ==  .HitResult:Lucky % 5
                Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
            EndIf
            Call  SetAnimation  ( .Actor:Self .Part:pnkShyGuy .Anim:pnkShyGuyTackle )
            Call  SetActorSpeed ( .Actor:Self *Fixed[2.0] )
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.5] )
            Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
            Sub   *Var0  0000001E
            Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
            Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
            Sub   *Var0  00000014
            Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
            Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
            Wait  15`
            Call  UseBattleCamPreset    ( 00000002 )
            Call  MoveBattleCamOver     (  15` )
            Call  SetActorYaw   ( .Actor:Self  180` )
            Call  AddActorDecoration    ( .Actor:Self .Part:pnkShyGuy 00000000 .Decoration:Sweat )
            Call  SetActorSpeed ( .Actor:Self *Fixed[2.0] )
            SetConst  *Var0  .Part:pnkShyGuy
            SetConst  *Var1  .Anim:pnkShyGuyTackleRun
            ExecWait  DoReturnHome
            Call  RemoveActorDecoration ( .Actor:Self .Part:pnkShyGuy 00000000 )
            Call  SetActorYaw   ( .Actor:Self  0` )
            Call  SetAnimation  ( .Actor:Self .Part:pnkShyGuy .Anim:pnkShyGuyIdle )
            Call  EnableIdleScript      ( .Actor:Self .True )
            Call  UseIdleAnimation      ( .Actor:Self .True )
            Return
        EndCaseGroup
    EndSwitch
    Call  SetActorSpeed ( .Actor:Self *Fixed[2.0] )
    Call  SetAnimation  ( .Actor:Self .Part:pnkShyGuy .Anim:pnkShyGuyRaise )
    Thread
        Wait  9`
        Call  SetAnimation  ( .Actor:Self .Part:pnkShyGuy .Anim:pnkShyGuyJump )
    EndThread
    Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetGoalToTarget   ( .Actor:Self )
    Call  JumpToGoal        ( .Actor:Self  18` .False .True .False )
    Wait  2`
    Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000000 .Damage:pnkJump 00000020 )
    Switch  *Var0
        CaseOR  ==  .HitResult:Hit % 0
        CaseOR  ==  .HitResult:QuakeImmune % 2
            Call  UseBattleCamPreset    ( 00000002 )
            Call  MoveBattleCamOver     (  15` )
            Thread
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000E 00000000 )
                Set   *Var3  00000000
                Loop  00000014
                    Sub   *Var3  0000001E
                    If  *Var3  <  00000000
                        Add   *Var3  00000168
                    EndIf
                    Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var3 )
                    Wait  1`
                EndLoop
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
            EndThread
            Call  GetBattleFlags    ( *Var0 )
            If  *Var0  &  80000000
                Goto  1
            EndIf
            Call  GetLastDamage ( .Actor:Player *Var0 )
            If  *Var0  ==  00000000
                Goto  1
            EndIf
            Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
            Add   *Var0  00000028
            Set   *Var1  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
            Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 00000349 )
            Call  PlaySoundAtActor      ( .Actor:Self 00000749 )
            Call  SetAnimation  ( .Actor:Self .Part:pnkShyGuy .Anim:pnkShyGuyRaise )
            Wait  10`
            Call  SetAnimation  ( .Actor:Self .Part:pnkShyGuy .Anim:pnkShyGuyBow )
            Wait  15`
            Goto  2
            Label  1
            Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
            Add   *Var0  00000028
            Set   *Var1  00000000
            Call  SetActorJumpGravity   ( .Actor:Self *Fixed[0.8] )
            Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
            Call  JumpToGoal    ( .Actor:Self  20` .False .True .False )
            Call  PlaySoundAtActor      ( .Actor:Self 000020E4 )
            Call  SetAnimation  ( .Actor:Self .Part:pnkShyGuy .Anim:pnkShyGuyDefeated )
            Wait  10`
            Call  PlaySoundAtActor      ( .Actor:Self 000020C3 )
            Call  AddActorDecoration    ( .Actor:Self .Part:pnkShyGuy 00000000 .Decoration:Sweat )
            Call  RandInt       ( 00000064 *Var0 )
            If  *Var0  <  00000032
                Call  SetAnimation  ( .Actor:Self .Part:pnkShyGuy .Anim:pnkShyGuyTalk )
            Else
                Call  SetAnimation  ( .Actor:Self .Part:pnkShyGuy .Anim:pnkShyGuyFail )
            EndIf
            Wait  25`
            Call  RemoveActorDecoration ( .Actor:Self .Part:pnkShyGuy 00000000 )
            Call  SetActorYaw   ( .Actor:Self  180` )
            Label  2
            Call  SetActorSpeed ( .Actor:Self *Fixed[2.0] )
            SetConst  *Var0  .Part:pnkShyGuy
            SetConst  *Var1  .Anim:pnkShyGuyTackleRun
            ExecWait  DoReturnHome
            Call  SetActorYaw   ( .Actor:Self  0` )
            Call  SetAnimation  ( .Actor:Self .Part:pnkShyGuy .Anim:pnkShyGuyIdle )
        EndCaseGroup
    EndSwitch
    Call EnableIdleScript ( .Actor:Self .True )
    Call UseIdleAnimation ( .Actor:Self .True )
    Return
    End
}