% Define King Boo Parts
#define .Part:KingBoo 1
#define .Part:FireBall 2
#define .Part:Boo 3

% King Boo Actor Variables
#define .AVar:Flags 0
#define .AVar:Clone1_ID 1
#define .AVar:Clone2_ID 2

#new:Actor $KingBoo
{
% stats
[Index]        D4b
[Level]        40`b % miniboss stats
[MaxHP]        40`b
[Coins]         0`b
[Flags]       00000204
[StatusTable] $StatusTable_KingBoo
% ai
[PartsCount]   3`s
[PartsTable] $PartsTable_KingBoo
[Script]      $Script_Init_KingBoo
% move effectiveness
[Escape]        0`b %no escape
[Item]          0`b
[AirLift]       0`b
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b
[PowerBounce]   4`b
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]        48`b 45`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b 20`b % dx dy (usually top left)
[StatusIcon]   10`b 20`b % dx dy (usually top right)
}

#new:StatusTable $StatusTable_KingBoo
{
.Status:Normal    0`
.Status:Default   0`
.Status:Sleep     100`
.Status:Poison    100`
.Status:Frozen    100`
.Status:Dizzy     100`
.Status:Fear      100`
.Status:Static    100`
.Status:Paralyze  100`
.Status:Shrink    100`
.Status:Stop      100`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       1`
.Status:End
}

#new:PartsTable $PartsTable_KingBoo % ActorPartBlueprint struct in decomp
{
    /% s32 flags %/                 00800000
    /% s8 index %/                  ~Byte:.Part:KingBoo
    /% Vec3b posOffset %/           0`b 0`b 0`b
    /% Vec2b targetOffset %/        0`b 43`b % For cursor when selecting to attack in battle
    /% s16 opacity %/               00FFs
    /% s32* IdleAnimations %/       $IdleAnimations_KingBoo
    /% s32* defenseTable %/         $DefenseTable_KingBoo
    /% s32 eventFlags %/            00000000
    /% s32 elementImmunityFlags %/  00000000
    /% s8 unk_1C %/                 00b
    /% s8 unk_1D %/                 F6b
    /% s8 unk_1E %/                 00b
    /% s8 unk_1F %/                 00b
    /% s8 unk_20 %/                 00000000

	/% Fire Ball %/
    /% s32 flags %/                 00120001
    /% s8 index %/                  ~Byte:.Part:FireBall
    /% Vec3b posOffset %/           0`b 0`b 0`b
    /% Vec2b targetOffset %/        0`b 0`b %for cursor when selecting to attack in battle
    /% s16 opacity %/               00FFs
    /% s32* IdleAnimations %/       $IdleAnimations_FireBall
    /% s32* defenseTable %/         00000000
    /% s32 eventFlags %/            00000000
    /% s32 elementImmunityFlags %/  00000000
    /% s8 unk_1C %/                 00b
    /% s8 unk_1D %/                 00b
    /% s8 unk_1E %/                 00b
    /% s8 unk_1F %/                 00b
    /% s8 unk_20 %/                 00000000

	/% Boo %/
    /% s32 flags %/                 00120001
    /% s8 index %/                  ~Byte:.Part:Boo
    /% Vec3b posOffset %/           0`b 0`b 0`b
    /% Vec2b targetOffset %/        0`b 0`b %for cursor when selecting to attack in battle
    /% s16 opacity %/               00FFs
    /% s32* IdleAnimations %/       $IdleAnimations_Boo
    /% s32* defenseTable %/         00000000
    /% s32 eventFlags %/            00000000
    /% s32 elementImmunityFlags %/  00000000
    /% s8 unk_1C %/                 00b
    /% s8 unk_1D %/                 00b
    /% s8 unk_1E %/                 00b
    /% s8 unk_1F %/                 00b
    /% s8 unk_20 %/                 00000000

}

#new:IdleAnimations $IdleAnimations_KingBoo
{
.Status:Normal    .Anim:KingBoo_Idle
.Status:Stone     .Anim:KingBoo_Still
.Status:Sleep     .Anim:KingBoo_Still
.Status:Poison    .Anim:KingBoo_Idle
.Status:Stop      .Anim:KingBoo_Still
.Status:Static    .Anim:KingBoo_Idle
.Status:Paralyze  .Anim:KingBoo_Still
.Status:Dizzy     .Anim:KingBoo_Still
.Status:End
}

#new:IdleAnimations $IdleAnimations_KingBoo_Charged
{
.Status:Normal    .Anim:KingBoo_Hide
.Status:Stone     .Anim:KingBoo_Hide
.Status:Sleep     .Anim:KingBoo_Hide
.Status:Poison    .Anim:KingBoo_Hide
.Status:Stop      .Anim:KingBoo_Hide
.Status:Static    .Anim:KingBoo_Hide
.Status:Paralyze  .Anim:KingBoo_Hide
.Status:Dizzy     .Anim:KingBoo_Hide
.Status:End
}


#new:IdleAnimations $IdleAnimations_FireBall
{
.Status:Normal    .Anim:KingBoo_FireBall
.Status:End
}

#new:IdleAnimations $IdleAnimations_Boo
{
.Status:Normal    .Anim:KingBoo_Boo
.Status:End
}

#new:DefenseTable $DefenseTable_KingBoo
{
.Element:Normal 0`
.Element:Jump 0`
.Element:Hammer 0`
.Element:Throw -2`
.Element:Water 3`
.Element:Fire 3`
.Element:Ice 3`
.Element:Blast -4`
.Element:Magic 50`
.Element:Cosmic -200`
.Element:End
}

#new:Script $Script_Init_KingBoo
{
	Call  BindTakeTurn	( .Actor:Self $Script_TakeTurn_KingBoo )
	Call  BindIdle	( .Actor:Self $Script_Idle_KingBoo )
	Call  BindHandleEvent  ( .Actor:Self $Script_HandleEvent_KingBoo )
	Call  SetActorVar   ( .Actor:Self .AVar:Flags 0` )
	Call  SetActorVar   ( .Actor:Self .AVar:Clone1_ID -1` )
	Call  SetActorVar   ( .Actor:Self .AVar:Clone2_ID -1` )
	% Boo 1
	Call  CreateNpc     ( 1` .Anim:KingBoo_Boo )
	Call  SetNpcYaw     ( 1` 0` )
	Call  SetNpcPos     ( 1` 0` -1000` 0` )
	Call  EnableNpcShadow  ( 1` .True )
	% Boo 2
	Call  CreateNpc     ( 2` .Anim:KingBoo_Boo )
	Call  SetNpcYaw     ( 2` 0` )
	Call  SetNpcPos     ( 2` 0` -1000` 0` )
	Call  EnableNpcShadow  ( 2` .True )
	% Boo 3
	Call  CreateNpc     ( 3` .Anim:KingBoo_Boo )
	Call  SetNpcYaw     ( 3` 0` )
	Call  SetNpcPos     ( 3` 0` -1000` 0` )
	Call  EnableNpcShadow  ( 3` .True )
	% Boo 4
	Call  CreateNpc     ( 4` .Anim:KingBoo_Boo )
	Call  SetNpcYaw     ( 4` 0` )
	Call  SetNpcPos     ( 4` 0` -1000` 0` )
	Call  EnableNpcShadow  ( 4` .True )
	Return
	End
}


#new:Script $Script_Idle_KingBoo
{
	/%
	Label  5
    Call  GetStatusFlags    ( .Actor:Self *VarA )
    If  *VarA  &  ~Flags:StatusFlags:Sleep|Paralyze|Dizzy|Stone|Stop % 351000
        Wait  1`
        Goto  5
    EndIf
    Call  SetIdleGoalToHome ( .Actor:Self )
    Call  GetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
    Add   *Var1  2`
    Call  GetActorPos       ( .Actor:Self *Var3 *Var4 *Var5 )
    If  *Var4  >=  *Var1
        Goto  B
    EndIf
    Wait  9`
    Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[1.0] )
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.5] )
    Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
    Call  IdleFlyToGoal     ( .Actor:Self 0` 0` .Easing:SinOut )
    Label  B
    Call  GetStatusFlags    ( .Actor:Self *VarA )
    If  *VarA  &  ~Flags:StatusFlags:Sleep|Paralyze|Dizzy|Stone|Stop % 351000
        Wait  1`
        Goto  5
    EndIf
    Call  SetIdleGoalToHome ( .Actor:Self )
    Call  GetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
    Add   *Var1  4`
    Call  GetActorPos       ( .Actor:Self *Var3 *Var4 *Var5 )
    If  *Var4  >=  *Var1
        Goto  C
    EndIf
    Wait  9`
    Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[1.0] )
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.5] )
    Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
    Call  IdleFlyToGoal     ( .Actor:Self 0` 0` .Easing:SinOut )
    Wait  3`
    Label  C
    Call  GetStatusFlags    ( .Actor:Self *VarA )
    If  *VarA  &  ~Flags:StatusFlags:Sleep|Paralyze|Dizzy|Stone|Stop % 351000
        Wait  1`
        Goto  5
    EndIf
    Call  SetIdleGoalToHome ( .Actor:Self )
    Call  GetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
    Add   *Var1  2`
    Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.3] )
    Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
    Call  IdleFlyToGoal     ( .Actor:Self 0` 1` .Easing:SinOut )
    Wait  1`
    Goto  5
	%/
	Return
	End
}

#new:Script $Script_HandleEvent_KingBoo
{
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self .False )
	Call     GetLastEvent 	( .Actor:Self *Var0 )
	Switch  *Var0
		CaseOR  ==  .Event:HitCombo
			Call  SetActorVar ( .Actor:Enemy0 .AVar:Flags *Var0 )
			Call  GetActorVar ( .Actor:Self .AVar:Clone1_ID *Var0 )
			Call  ActorExists ( *Var0 *Var1 )
			If *Var1 == .True
				Thread
					Call  SetOwnerID ( *Var0 )
					SetConst  *Var0  .Part:KingBoo
					SetConst  *Var1  .Anim:KingBoo_Hurt
					ExecWait DoNormalHit
				EndThread
			EndIf
			Call  GetActorVar ( .Actor:Self .AVar:Clone2_ID *Var0 )
			Call  ActorExists ( *Var0 *Var1 )
			If *Var1 == .True
				Thread
					Call  SetOwnerID ( *Var0 )
					SetConst  *Var0  .Part:KingBoo
					SetConst  *Var1  .Anim:KingBoo_Hurt
					ExecWait DoNormalHit
				EndThread
			EndIf
			SetConst  *Var0  .Part:KingBoo
			SetConst  *Var1  .Anim:KingBoo_Hurt
			ExecWait DoNormalHit
			ExecWait $Script_OnHit
		CaseOR  ==  .Event:Hit
			Call  SetActorVar ( .Actor:Enemy0 .AVar:Flags *Var0 )
			Call  GetActorVar ( .Actor:Self .AVar:Clone1_ID *Var0 )
			Call  ActorExists ( *Var0 *Var1 )
			If *Var1 == .True
				Thread
					Call  SetOwnerID ( *Var0 )
					SetConst  *Var0  .Part:KingBoo
					SetConst  *Var1  .Anim:KingBoo_Hurt
					ExecWait DoNormalHit
				EndThread
			EndIf
			Call  GetActorVar ( .Actor:Self .AVar:Clone2_ID *Var0 )
			Call  ActorExists ( *Var0 *Var1 )
			If *Var1 == .True
				Thread
					Call  SetOwnerID ( *Var0 )
					SetConst  *Var0  .Part:KingBoo
					SetConst  *Var1  .Anim:KingBoo_Hurt
					ExecWait DoNormalHit
				EndThread
			EndIf
			SetConst  *Var0  .Part:KingBoo
			SetConst  *Var1  .Anim:KingBoo_Hurt
			ExecWait DoNormalHit
			ExecWait $Script_OnHit
		EndCaseGroup
		Case  ==  .Event:BurnHit
			Call  SetActorVar ( .Actor:Enemy0 .AVar:Flags *Var0 )
			Call  GetActorVar ( .Actor:Self .AVar:Clone1_ID *Var0 )
			Call  ActorExists ( *Var0 *Var1 )
			If *Var1 == .True
				Thread
					Call  SetOwnerID ( *Var0 )
					SetConst  *Var0  .Part:KingBoo
					SetConst  *Var1  .Anim:KingBoo_Hurt
					SetConst  *Var2  .Anim:KingBoo_Hurt % Change to Death animation
					ExecWait DoBurnHit
				EndThread
			EndIf
			Call  GetActorVar ( .Actor:Self .AVar:Clone2_ID *Var0 )
			Call  ActorExists ( *Var0 *Var1 )
			If *Var1 == .True
				Thread
					Call  SetOwnerID ( *Var0 )
					SetConst  *Var0  .Part:KingBoo
					SetConst  *Var1  .Anim:KingBoo_Hurt
					SetConst  *Var2  .Anim:KingBoo_Hurt % Change to Death animation
					ExecWait DoBurnHit
				EndThread
			EndIf
			SetConst  *Var0  .Part:KingBoo
			SetConst  *Var1  .Anim:KingBoo_Hurt
			SetConst  *Var2  .Anim:KingBoo_Hurt % Change to Death animation
			ExecWait DoBurnHit
			ExecWait $Script_OnHit
		Case  ==  .Event:BurnDeath
			Call  SetActorVar ( .Actor:Enemy0 .AVar:Flags *Var0 )
			Call  GetActorVar ( .Actor:Self .AVar:Clone1_ID *Var0 )
			Call  ActorExists ( *Var0 *Var1 )
			If *Var1 == .True
				Thread
					Call  SetOwnerID ( *Var0 )
					SetConst  *Var0  .Part:KingBoo
					SetConst  *Var1  .Anim:KingBoo_Hurt
					ExecWait DoBurnHit
				EndThread
			EndIf
			Call  GetActorVar ( .Actor:Self .AVar:Clone2_ID *Var0 )
			Call  ActorExists ( *Var0 *Var1 )
			If *Var1 == .True
				Thread
					Call  SetOwnerID ( *Var0 )
					SetConst  *Var0  .Part:KingBoo
					SetConst  *Var1  .Anim:KingBoo_Hurt
					ExecWait DoBurnHit
				EndThread
			EndIf
			SetConst  *Var0  .Part:KingBoo
			SetConst  *Var1  .Anim:KingBoo_Hurt
			SetConst  *Var2  .Anim:KingBoo_Hurt  % Change to Death Animation
			ExecWait DoBurnHit
			ExecWait $Script_OnDeath
			SetConst  *Var0  .Part:KingBoo
			SetConst  *Var1  .Anim:KingBoo_Hurt  % Change to Death Animation
			ExecWait DoDeath
			Return
		CaseOR  ==  00000017
		CaseOR  ==  .Event:Immune
		CaseOR  ==  .Event:AirLiftFailed
		EndCaseGroup
		Case  ==  .Event:Death
			Call  SetActorVar ( .Actor:Enemy0 .AVar:Flags *Var0 )
			Call  GetActorVar ( .Actor:Self .AVar:Clone1_ID *Var0 )
			Call  ActorExists ( *Var0 *Var1 )
			If *Var1 == .True
				Thread
					Call  SetOwnerID ( *Var0 )
					SetConst  *Var0  .Part:KingBoo
					SetConst  *Var1  .Anim:KingBoo_Hurt
					ExecWait DoNormalHit
				EndThread
			EndIf
			Call  GetActorVar ( .Actor:Self .AVar:Clone2_ID *Var0 )
			Call  ActorExists ( *Var0 *Var1 )
			If *Var1 == .True
				Thread
					Call  SetOwnerID ( *Var0 )
					SetConst  *Var0  .Part:KingBoo
					SetConst  *Var1  .Anim:KingBoo_Hurt
					ExecWait DoNormalHit
				EndThread
			EndIf
			SetConst  *Var0  .Part:KingBoo
			SetConst  *Var1  .Anim:KingBoo_Hurt
			ExecWait DoNormalHit
			ExecWait $Script_OnDeath
			SetConst  *Var0  .Part:KingBoo
			SetConst  *Var1  .Anim:KingBoo_Hurt
			ExecWait DoDeath
			Return
		Case  ==  .Event:RecoverStatus
			SetConst  *Var0  .Part:KingBoo
			SetConst  *Var1  .Anim:KingBoo_Idle
			ExecWait DoRecover
		Case  ==  .Event:BeginAirLift
			SetConst  *Var0  .Part:KingBoo
			SetConst  *Var1  .Anim:KingBoo_Idle
			ExecWait DoImmune
		Default
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self .True )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}

#new:Script $Script_OnHit
{
	Call  GetActorVar ( .Actor:Self .AVar:Clone1_ID *Var9 )
	Call  ActorExists ( *Var9 *VarA )
	If *VarA == .True
		Call  GetActorVar ( .Actor:Self .AVar:Clone1_ID *Var9 )
		Exec $Script_RemoveClone
		Call  GetActorVar ( .Actor:Self .AVar:Clone2_ID *Var9 )
		Exec $Script_RemoveClone *Var0
		Label 1
		DoesScriptExist *Var0 *Var1
		If *Var1 == .True
			Wait 1`
			Goto 1
		EndIf
	EndIf
	Wait  30`
	Call  8027D32C ( .Actor:Self )
	Call  SetAnimation ( .Actor:Self .Part:KingBoo .Anim:KingBoo_MoveFast )
	Call  SetActorSpeed ( .Actor:Self *Fixed[6.0] )
	Call  SetGoalPos ( .Actor:Self 70` 50` 5` )
	Call  FlyToGoal ( .Actor:Self 0` 0` .Easing:CosInOut )
	Call  SetAnimation ( .Actor:Self .Part:KingBoo .Anim:KingBoo_Idle )
	Wait  5`
	Call  GetActorPos ( .Actor:Self *Var0 *Var1 *Var2 )
	Call  ForceHomePos ( .Actor:Self *Var0 *Var1 *Var2 )
	Call  HPBarToHome   ( .Actor:Self )
	Return
	End
}

#new:Script $Script_OnDeath
{
	Call  GetActorVar ( .Actor:Self .AVar:Clone1_ID *Var9 )
	Call  ActorExists ( *Var9 *VarA )
	If *VarA == .True
		Call  GetActorVar ( .Actor:Self .AVar:Clone1_ID *Var9 )
		Exec $Script_RemoveClone
		Call  GetActorVar ( .Actor:Self .AVar:Clone2_ID *Var9 )
		Exec $Script_RemoveClone *Var0
		Label 1
		DoesScriptExist *Var0 *Var1
		If *Var1 == .True
			Wait 1`
			Goto 1
		EndIf
	EndIf
	Return
	End
}

#new:Script $Script_RemoveClone
{
	Call  EnableActorBlur ( *Var9 .True )
	Call  SetActorFlagBits ( *Var9 00400000 .True )
	Call  RemoveActor ( *Var9 )
	Return
	End
}

#new:Script $Script_TakeTurn_KingBoo
{
    Call	UseIdleAnimation	( .Actor:Self .False )
	Call	EnableIdleScript	( .Actor:Self .False )
	Call ActorExists ( .Actor:Enemy1 *Var5 )
	If *Var5 == .False
		ExecWait $Script_IllusoryClones
	EndIf
	Call ActorExists ( .Actor:Enemy2 *Var5 )
	If *Var5 == .False
		ExecWait $Script_IllusoryClones
	EndIf
    Call	UseIdleAnimation	( .Actor:Self .True )
	Call	EnableIdleScript	( .Actor:Self .True )
	Return
	End
}

#new:Vector3D $Vector3D_KingBooClonePos
{
0` -1000` 0`
}

#new:SpecialFormation $SpecialFormation_KingBooClone
{
$KingBooClone $Vector3D_KingBooClonePos 00000000 00000000 00000000 00000000 00000000
}

/%
#new:Script $Script_BooFlood
{
	Call  EnableIdleScript ( .Actor:Self .False )
    Call  UseIdleAnimation 	( .Actor:Self .False )
	% Boo 1
	Call  SetNpcPos ( 1` 0` -200` -125` )
	Call  SetNpcAnimation ( 1` .Anim:KingBoo_BooLaugh )
	Call  NpcFlyTo ( 1` 0` 300` -125` 15` 0` .Easing:CosInOut )
	%Call  RemoveNpc ( 1` )
	Wait  5`
	% Boo 2
	Call  SetNpcPos ( 2` 0` -200` -125` )
	Call  SetNpcAnimation ( 2` .Anim:KingBoo_BooLaugh )
	Call  NpcFlyTo ( 2` 0` 300` -125` 15` 0` .Easing:CosInOut )
	%Call  RemoveNpc ( 2` )
	Wait  5`
	% Boo 3
	Call  SetNpcPos ( 3` 0` -200` -125` )
	Call  SetNpcAnimation ( 3` .Anim:KingBoo_BooLaugh )
	Call  NpcFlyTo ( 3` 0` 300` -125` 15` 0` .Easing:CosInOut )
	%Call  RemoveNpc ( 3` )
	Wait  5`
	% Boo 4
	Call  SetNpcPos ( 4` 0` -200` -125` )
	Call  SetNpcAnimation ( 4` .Anim:KingBoo_BooLaugh )
	Call  NpcFlyTo ( 4` 0` 300` -125` 15` 0` .Easing:CosInOut )
	%Call  RemoveNpc ( 4` )
	Wait  5`
	Call  SetAnimation ( .Actor:Self .Part:KingBoo .Anim:KingBoo_BooAbsorb )
	Wait  70`
	Call  SetAnimation ( .Actor:Self .Part:KingBoo .Anim:KingBoo_BooAbsorbEnd )
	Wait  30`
	Call  EnableIdleScript ( .Actor:Self .True )
    Call  UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}
%/

#new:Script $Script_IllusoryClones
{
	Call  EnableIdleScript ( .Actor:Self .False )
    Call  UseIdleAnimation 	( .Actor:Self .False )
	Call  SetAnimation ( .Actor:Self .Part:KingBoo .Anim:KingBoo_CrownAttack )
	Call  PlaySoundAtActor ( .Actor:Self .Sound:SpellCast4 )
	Wait  70`
	%Wait  40`
	%ExecWait $Script_BooFlood
	Set *Var0 0`
	Call  GetActorHP ( .Actor:Self *VarA )
	Call  SummonEnemy 	( $SpecialFormation_KingBooClone 00000000 )
	Call  SetActorVar ( .Actor:Self .AVar:Clone1_ID *Var0 )
	Call  SetPartEventBits 	( *Var0 00000001 00000020 .True )
	Call  SetEnemyHP  	( *Var0 *VarA )
	Call  SummonEnemy 	( $SpecialFormation_KingBooClone 00000000 )
	Call  SetActorVar ( .Actor:Self .AVar:Clone2_ID *Var0 )
	Call  SetPartEventBits 	( *Var0 00000001 00000020 .True )
	Call  SetEnemyHP  	( *Var0 *VarA )

	% King Boo Vanish
	Call  PlaySoundAtActor	( .Actor:Self .Sound:BooVanish )
	Call  SetAnimation		( .Actor:Self .Part:KingBoo .Anim:KingBoo_Hide )
	SetF *Var3 256`
	Loop  16`
		Sub *Var3 16`
		Call  SetPartAlpha	( .Actor:Self .Part:KingBoo *Var3 )
		Wait  1`
	EndLoop
	Call  SetActorFlagBits 	( .Actor:Self 00000004 .True )

	% Clone 1 Vanish
	Call  GetActorPos ( .Actor:Self *Var0 *Var1 *Var2 )
	Call  GetActorVar ( .Actor:Self .AVar:Clone1_ID *VarA )
    Call SetPartFlagBits   ( *VarA .Part:KingBoo 00000001 .True )
	SetF *Var3 256`
	Loop  16`
		Sub *Var3 16`
		Call  SetPartAlpha	( *VarA .Part:KingBoo *Var3 )
		Wait  1`
	EndLoop
	Call  SetActorPos ( *VarA *Var0 *Var1 *Var2 )
	Call  SetActorFlagBits 	( *VarA 00000004 .True )

	% Clone 2 Vanish
	Call  GetActorPos ( .Actor:Self *Var0 *Var1 *Var2 )
	Call  GetActorVar ( .Actor:Self .AVar:Clone2_ID *VarA )
    Call SetPartFlagBits   ( *VarA .Part:KingBoo 00000001 .True )
	SetF *Var3 256`
	Loop  16`
		Sub *Var3 16`
		Call  SetPartAlpha	( *VarA .Part:KingBoo *Var3 )
		Wait  1`
	EndLoop
	Call  SetActorPos ( *VarA *Var0 *Var1 *Var2 )
	Wait 1`
	Call  SetActorFlagBits 	( *VarA 00000004 .True )

	ExecWait $Script_Clone_Position

	% King Boo
	Call  GetActorPos 	( .Actor:Self *Var0 *Var1 *Var2 )
	Call  ForceHomePos  ( .Actor:Self *Var0 *Var1 *Var2 )
	Call  HPBarToHome   ( .Actor:Self )

	% Clone 1
	Call  GetActorVar 	( .Actor:Self .AVar:Clone1_ID *VarA )
	Call  GetActorPos 	( *VarA *Var0 *Var1 *Var2 )
	Call  ForceHomePos  ( *VarA *Var0 *Var1 *Var2 )
	Call  HPBarToHome   ( *VarA )

	% Clone 2
	Call  GetActorVar 	( .Actor:Self .AVar:Clone2_ID *VarA )
	Call  GetActorPos 	( *VarA *Var0 *Var1 *Var2 )
	Call  ForceHomePos  ( *VarA *Var0 *Var1 *Var2 )
	Call  HPBarToHome   ( *VarA )

	% King Boo Appears
	Call  UseBattleCamPreset 	( 00000002 )
	Call  MoveBattleCamOver 	( 00000014 )
	Call  SetAnimation ( .Actor:Self .Part:KingBoo .Anim:KingBoo_Laugh )
	Call  PlaySoundAtActor	( .Actor:Self .Sound:BooAppear )
	Call  PlaySoundAtActor	( .Actor:Self 00002094 )
	SetF *Var3 256`
	Call  SetPartAlpha	( .Actor:Self .Part:KingBoo *Var3 )
	Call  SetActorFlagBits 	( .Actor:Self 00000004 .True )

	% Clone 1 Appears
	Call  GetActorVar ( .Actor:Self .AVar:Clone1_ID *Var0 )
	Call  UseIdleAnimation ( *Var0 .False )
	Call  SetAnimation ( *Var0 .Part:KingBoo .Anim:KingBoo_Laugh )
	Call  PlaySoundAtActor	( *Var0 .Sound:BooAppear )
	SetF *Var3 256`
	Call  SetPartAlpha	( *Var0 .Part:KingBoo *Var3 )
    Call SetPartFlagBits   ( *Var0 .Part:KingBoo 00000001 .False )
	Call  SetActorFlagBits 	( *Var0 00000004 .True )

	% Clone 2 Appears
	Call  GetActorVar ( .Actor:Self .AVar:Clone2_ID *Var0 )
	Call  UseIdleAnimation ( *Var0 .False )
	Call  SetAnimation ( *Var0 .Part:KingBoo .Anim:KingBoo_Laugh )
	Call  PlaySoundAtActor	( *Var0 .Sound:BooAppear )
	SetF *Var3 256`
	Call  SetPartAlpha	( *Var0 .Part:KingBoo *Var3 )
    Call SetPartFlagBits   ( *Var0 .Part:KingBoo 00000001 .False )
	Call  SetActorFlagBits 	( *Var0 00000004 .True )

	Wait  15`
	Call  GetActorVar ( .Actor:Self .AVar:Clone1_ID *Var0 )
	Call  UseIdleAnimation ( *Var0 .True )
	Call  GetActorVar ( .Actor:Self .AVar:Clone2_ID *Var0 )
	Call  UseIdleAnimation ( *Var0 .True )
	Call  EnableIdleScript ( .Actor:Self .True )
    Call  UseIdleAnimation 	( .Actor:Self .True )
    Return
    End
}

#new:Script $Script_Clone_Position
{
	Call RandInt ( 1000` *Var0 )
    Mod *Var0 3`
	%Set *Var0 0` % To see the Position
    Switch *Var0
		Case == 0`
            Set *VarA .Actor:Self
            Call GetActorVar ( .Actor:Self .AVar:Clone1_ID *VarB )
            Call GetActorVar ( .Actor:Self .AVar:Clone2_ID *VarC )
        Case == 1`
            Call GetActorVar ( .Actor:Self .AVar:Clone1_ID *VarA )
            Set *VarB .Actor:Self
            Call GetActorVar ( .Actor:Self .AVar:Clone2_ID *VarC )
		Case == 2`
            Call GetActorVar ( .Actor:Self .AVar:Clone1_ID *VarA )
            Call GetActorVar ( .Actor:Self .AVar:Clone2_ID *VarB )
            Set *VarC .Actor:Self
	EndSwitch
    Call  UseBattleCamPreset ( 2` )
    Call  MoveBattleCamOver ( 150` )

	% *VarA
	Call GetActorPos ( *VarA *Var0 *Var1 *Var2 )
	Set *Var0 18`
	Set *Var2 5`
	Call SetActorPos ( *VarA *Var0 *Var1 *Var2 )

	% *VarB
	Call GetActorPos ( *VarB *Var0 *Var1 *Var2 )
	Set *Var0 70`
	Set *Var2 5`
	Call SetActorPos ( *VarB *Var0 *Var1 *Var2 )

	% *VarC
	Call GetActorPos ( *VarC *Var0 *Var1 *Var2 )
	Set *Var0 122`
	Set *Var2 5`
	Call SetActorPos ( *VarC *Var0 *Var1 *Var2 )

	% Jumpscare
    Wait 15`
	Return
    End
}

#new:Script $Script_Clone_Buff
{
	Call  GetActorVar ( .Actor:Self .AVar:Clone1_ID *Var0 )
	Call  UseIdleAnimation ( *Var0 .False )
	Call  SetAnimation ( *Var0 .Part:KingBoo .Anim:KingBoo_CrownAttack )
	Call  PlaySoundAtActor ( *Var0 .Sound:SpellCast4 )
	Call  GetActorVar ( .Actor:Self .AVar:Clone2_ID *Var0 )
	Call  UseIdleAnimation ( *Var0 .False )
	Call  SetAnimation ( *Var0 .Part:KingBoo .Anim:KingBoo_CrownAttack )
	Call  PlaySoundAtActor ( *Var0 .Sound:SpellCast4 )
	Wait  80`
	Call  GetActorVar ( .Actor:Self .AVar:Clone1_ID *Var0 )
	Call  UseIdleAnimation ( *Var0 .True )
	Call  GetActorVar ( .Actor:Self .AVar:Clone2_ID *Var0 )
	Call  UseIdleAnimation ( *Var0 .True )
	Call  PlaySoundAtActor  ( .Actor:Self .Sound:PowerUp )
	Call  GetActorPos ( .Actor:Self *Var0 *Var1 *Var2 )
	Add *Var1 20`
	Call  PlayEffect ( ~FX:EnergyIn:LongStreaks1 *Var0 *Var1 *Var2 *Fixed[1.0] 45` 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call  SetAnimation ( .Actor:Self .Part:KingBoo .Anim:KingBoo_Laugh )
	Wait  30`
	Call  GetActorVar ( .Actor:Self .AVar:Clone1_ID *Var9 )
	Call  ActorExists ( *Var9 *VarA )
	If *VarA == .True
		Call  GetActorVar ( .Actor:Self .AVar:Clone1_ID *Var9 )
		Exec $Script_RemoveClone
		Call  GetActorVar ( .Actor:Self .AVar:Clone2_ID *Var9 )
		Exec $Script_RemoveClone *Var0
		Label 1
		DoesScriptExist *Var0 *Var1
		If *Var1 == .True
			Wait 1`
			Goto 1
		EndIf
	EndIf
	Call  SetAnimation ( .Actor:Self .Part:KingBoo .Anim:KingBoo_Hide )
	Return
	End
}
